{% if has_bastion %}
{% set vars={'hosts': ''} %}
{% set user='' %}

{% for h in groups['all'] %}
{% if h not in groups['bastion'] %}
{% if vars.update({'hosts': vars['hosts'] + ' ' + (hostvars[h].get('ansible_ssh_host') or hostvars[h]['ansible_host'])}) %}{% endif %}
{% endif %}
{% endfor %}

Host {{ bastion_ip }} {{ groups['bastion'][0] }}
  Hostname {{ bastion_ip }}
  StrictHostKeyChecking no
  ControlMaster auto
  ControlPath ~/.ssh/ansible-%r@%h:%p
  ControlPersist 5m
  ServerAliveInterval 30
  User {{ real_user }}
{% if ansible_ssh_private_key_file is defined %}
  IdentityFile {{ ansible_ssh_private_key_file }}
{% endif %}

{% endif %}

# use separate entries per host, so that we don't need to reload ssh config during playbook run
#    also it feels faster to connect to the host

# TODO: ... some thing within kubespray may put a file /credentials/kube-user into the inventory folder.
#       the content of this file (some token) will appear ing groups['all'] as hostname and causes issues
#       FIX: (possible solutions)
#         - don't use groups['all']
#         - fix kubespray to not add this file/folder inside the inventory
#         - kae sure there is a file endingg like kube-user.creds to tell ansible to ignore this file

{% for h in groups['all'] %}
{% if h not in groups['bastion'] %}
{% set host_ip = hostvars[h].get('ansible_ssh_host') or hostvars[h].get('ansible_host') %}

Host {{ h }} {{ host_ip }}
  ProxyCommand ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=30 -o UserKnownHostsFile=/dev/null -W {{ host_ip }}:%p {{ bastion_ip }}
  User {{ real_user }}
{% if ansible_ssh_private_key_file is defined %}
  IdentityFile {{ ansible_ssh_private_key_file }}
{% endif %}

# we have to use the internal ip address in the proxy command, becuase there is no hostname resolution for nova instance names.
# and bastion does not have any entris in /etc/hosts either.
# TODO: manage /etc/hosts on bastion host as well; however, the the tasks to configure ssh runs on localhost only, so including the kubernets/preinstall role with task ecthosts.yml would update /etc/hosts on localhost
#  ProxyCommand ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=30 -o UserKnownHostsFile=/dev/null -W %h:%p {{ real_user }}@{{ bastion_ip }} {% if ansible_ssh_private_key_file is defined %}-i {{ ansible_ssh_private_key_file }}{% endif %}


{% endif %}
{% endfor %}
